# Uncomment some or all of these to enable the optional hardware interfaces
# Params:
#         i2c_arm                  Set to "on" to enable the ARM's i2c interface
#                                  (default "off")
#         i2c_vc                   Set to "on" to enable the i2c interface
#                                  usually reserved for the VideoCore processor
#                                  (default "off")
#         i2c_arm_baudrate         Set the baudrate of the ARM's i2c interface
#                                  (default "100000")
#         i2c_vc_baudrate          Set the baudrate of the VideoCore i2c interface
#                                  (default "100000")
#         i2c_baudrate             An alias for i2c_arm_baudrate
#         i2s                      Set to "on" to enable the i2s interface
#                                  (default "off")
#         spi                      Set to "on" to enable the spi interfaces
#                                  (default "off")
#         act_led_trigger          Choose which activity the LED tracks.
#                                  Use "heartbeat" for a nice load indicator.
#                                  (default "mmc")
#         act_led_activelow        Set to "on" to invert the sense of the LED
#                                  (default "off")
#         act_led_gpio             Set which GPIO pin to use for the activity LED
#                                  (in case you want to connect it to an external
#                                  device)
#                                  (default "16" on a non-Plus board, "47" on a
#                                  Plus or Pi 2)
#         N.B. It is recommended to only enable those interfaces that are needed.
#         Leaving all interfaces enabled can lead to unwanted behaviour (i2c_vc
#         interfering with Pi Camera, I2S and SPI hogging GPIO pins, etc.)
#         Note also that i2c, i2c_arm and i2c_vc are aliases for the physical
#         interfaces i2c0 and i2c1. Use of the numeric variants is still possible
#         but deprecated because the ARM/VC assignments differ between board
#         revisions. The same board-specific mapping applies to i2c_baudrate,
#         and the other i2c baudrate parameters.
#
#         See /boot/overlays/README for details of all of the parameters, settings
#         and overlays.
#
# Conditional filters in config.txt
#         See: https://www.raspberrypi.com/documentation/computers/config_txt.html#conditional-filters
#

#dtparam=i2c_arm=on
#dtparam=i2c_vc=on
#dtparam=i2s=on
#dtparam=spi=on
#dtparam=act_led_trigger=mmc
#dtdebug=on

#dtparam=uart1=off
#dtoverlay=disable-wifi
#dtoverlay=disable-bt
#dtoverlay=miniuart-bt

## RuneAudio HDMI & 3,5mm jack
dtparam=audio=on

## RuneAudio I2S-Settings
#dtoverlay=none

## onboard Bluetooth if available
dtparam=krnbt=on

# Uncomment to enable the gpio-ir module
#Info:   Use GPIO pin as rc-core style infrared receiver input. The rc-core-
#        based gpio_ir_recv driver maps received keys directly to a
#        /dev/input/event* device, all decoding is done by the kernel - LIRC is
#        not required! The key mapping and other decoding parameters can be
#        configured by "ir-keytable" tool.
#Load:   dtoverlay=gpio-ir,<param>=<val>
#Params: gpio_pin                Input pin number. Default is 18.
#        gpio_pull               Desired pull-up/down state (off, down, up)
#                                Default is "up".
#        invert                  "1" = invert the input (active-low signalling).
#                                "0" = non-inverted input (active-high
#                                signalling). Default is "1".
#
#        rc-map-name             Default rc keymap (can also be changed by
#                                ir-keytable), defaults to "rc-rc6-mce"
#dtoverlay=gpio-ir
#dtoverlay=gpio-ir,gpio_pin=18
#dtoverlay=gpio-ir,gpio_pin=18,gpio_pull=down

# enable hardware graphics accelerators (not normally required)
# these drivers screw up many things in RuneAudio, you are advised not to use them
# Pi model Zero, 1, 2 & 3 (gpu_mem=28 minimum, gpu_mem=64 advised for models with 1GB memory)
#dtoverlay=vc4-kms-v3d,noaudio
# Pi model 4 (gpu_mem=28 minimum, gpu_mem=64 advised)
#dtoverlay=vc4-kms-v3d-pi4,noaudio

# LCD settings
# next 3 lines for the AdaFruit PiTFT Plus - 3.5" Resistive touch-screen
#dtparam=i2c_arm=on
#dtparam=spi=on
#dtoverlay=pitft35-resistive,rotate=90,speed=32000000,fps=20
# RPi FT5406 LCD card
#   rotation 0 (normal), 90, 180 or 270 degrees
#lcd_rotate=0
#lcd_rotate=1
#lcd_rotate=2
#lcd_rotate=3
#dtoverlay=rpi-backlight
#dtoverlay=rpi-ft5406
# waveshare LCD cards (these are XPT2046 / ADS7846 tft touch-screens)
#   waveshare: uncomment all the following hdmi flags
#hdmi_force_hotplug=1
#hdmi_group=2
#hdmi_mode=1
#hdmi_mode=87
#hdmi_cvt 480 320 60 6 0 0 0
#hdmi_drive=2
# waveshare: choose one of the following pre-installed overlays, see: https://www.waveshare.com/w/upload/1/1e/RPi_LCD_User_Manual_EN.pdf
#   see instructions in the file /srv/http/command/waveshare_install.sh to change the calibration setup (default is for a 3,5 inch screen)
#   the overlays have 2 optional parameters: rotate (value: 0, 90, 180 or 270) and swapxy (value: 0 or 1)
#   see: https://github.com/swkim01/waveshare-dtoverlays
#dtoverlay=waveshare32b
#dtoverlay=waveshare32c
#dtoverlay=waveshare35a
#dtoverlay=waveshare35b
#dtoverlay=waveshare35b-v2
#dtoverlay=waveshare35c
#dtoverlay=waveshare4c

# Uncomment if you get no picture on HDMI for a default "safe" mode
#hdmi_safe=1

# Uncomment this if your display has a black border of unused pixels visible
# and your display can output without overscan (uncomment this for small LCD screens)
#disable_overscan=1

# Uncomment the following to adjust overscan. Use positive numbers if console
# goes off screen, and negative if there is too much border
#overscan_left=16
#overscan_right=16
#overscan_top=16
#overscan_bottom=16

# Uncomment to force a console size. By default it will be display's size minus
# overscan.
#framebuffer_width=1280
#framebuffer_height=720

# Uncomment if hdmi display is not detected and composite is being output
#hdmi_force_hotplug=1

# Uncomment to force a specific HDMI mode (this will force VGA)
#hdmi_group=1
#hdmi_mode=1

# Uncomment to force a HDMI mode rather than DVI. This can make audio work in
# DMT (computer monitor) modes
#hdmi_drive=2

# Uncomment to set monitor mode to DMT
#hdmi_group=2

# Uncomment to increase signal to HDMI, if you have interference, blanking, or
# no display
#config_hdmi_boost=4

# setting the max usb current to 1200mA
max_usb_current=1

# memory options, see:https://www.raspberrypi.org/documentation/configuration/config-txt/memory.md
# default, it can be overridden by subsequent conditional entries, the last entry set is used
gpu_mem=64
[pi1]
# Conditional for Model A, Model B, Compute Module
gpu_mem=16
[pi0]
# Conditional for Zero, Zero W, Zero WH, Zero 2 W
gpu_mem=16
[pi02]
# Conditional for Zero 2 W (minimum 16, may not exceed 32)
gpu_mem=24
[board-type=0x0e]
# Conditional for Zero 3A+ (minimum 16, may not exceed 32) - boad type is '0xe' or 'ox0e'
gpu_mem=24
[board-type=0xe]
# Conditional for Zero 3A+ (minimum 16, may not exceed 32) - boad type is '0xe' or 'ox0e'
gpu_mem=24
[all]
# Conditional end

## Some overclocking settings, in RuneAudio  the governor is set to Turbo as default (see below)
## The values below are valid for the B+ model
## Overclocking should not be needed for the 2B, 3B, 3B+ and 4B models
## See internet for documentation on overclocking options for A, B and Zero models, be careful, check 2 independent sources!
[pi1]
# Conditional for Model A, Model B, Compute Module
## None
#arm_freq=700
#core_freq=250
#sdram_freq=400
#over_voltage=0

## Modest
#arm_freq=800
#core_freq=300
#sdram_freq=400
#over_voltage=0

## Medium
#arm_freq=900
#core_freq=333
#sdram_freq=450
#over_voltage=2

## High
#arm_freq=950
#core_freq=450
#sdram_freq=450
#over_voltage=6

## Turbo
#arm_freq=1000
#core_freq=500
#sdram_freq=500
#over_voltage=6
[all]
# Conditional end

## Underclocking placeholder

## General CPU settings
# Setting the governor to force turbo on (=1) can invalidates warranty in combination with some (higher) overclocking settings for some models
# We do this to try to keep the clocks in the Pi running at a consistent speed, many audio cards use this clock
# Altenative is turbo on demand (=0)
force_turbo=1
#force_turbo=0
# Lowering max CPU temperature from 85 (standard) to 70 or 75 degrees gives some headroom when turbo is set
# If the max temp is reached the cpu will automatically be throttled back
# Heatsinks are a good idea on Pi 3 and 4 models, a ventilator (fan) should be used on the Pi 4
temp_limit=75
# Boot delay sometimes needs to be set to higher values when overclocking is enabled
# Default boot delay is 1 second, 3B+ needs a delay of 2
boot_delay=2

initramfs initramfs-linux.img followkernel
